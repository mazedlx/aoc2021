$input = '[[[0,6],[[8,9],[3,7]]],[[[3,4],[7,0]],[[6,9],[4,8]]]]
...
[[1,[[9,0],8]],6]';

$data = collect(explode(PHP_EOL, $input))->toArray();


function add($a, $b){
	if (empty($a[0])){
		return $b;
	}

	return ['[', ...$a, ',', ...$b, ']'];
}

function split($a){
	foreach($a as $ak => $av){
		if (is_numeric($av) && $av >= 10){
			return [
                ...array_slice($a, 0, $ak),
                '[',
                floor($av/2),
                ',',
                ceil($av/2),
                ']',
                ...array_slice($a, $ak+1)
            ];
		}
	}

	return $a;
}

function expl($a){
	$depth = 0;
	$max_depth = 0;
	foreach($a as $ak => $av){

		if ($av == '['){
			$depth++;
			$max_depth = max($max_depth, $depth);
		} elseif ($av == ']'){
			$depth--;
		}

	}

	if ($max_depth <= 4){
		return $a;
	}

	$depth = 0;
	foreach($a as $ak => $av){
		if ($av == '['){
			$depth++;
		} elseif ($av == ']'){
			$depth--;
		}

		if ($depth == $max_depth && $av == '[' && !isset($reduce_point)){
			$reduce_point = $ak;
		}

		if (is_numeric($av) && !isset($reduce_point)){
			$last_numeric = $ak;
		}
		if (is_numeric($av) && isset($reduce_point) && $ak > ($reduce_point + 5) && !isset($next_numeric)){
			$next_numeric = $ak;
		}
	}

	if (isset($reduce_point)){

		if (isset($last_numeric)){
			$a[$last_numeric] = $a[$last_numeric] + $a[$reduce_point + 1];
		}

		if (isset($next_numeric)){
			$a[$next_numeric] = $a[$next_numeric] + $a[$reduce_point + 3];
		}

		$a[$reduce_point] = 0;
		unset($a[$reduce_point + 1]);
		unset($a[$reduce_point + 2]);
		unset($a[$reduce_point + 3]);
		unset($a[$reduce_point + 4]);

	}

	return array_values($a);

}


function reduce($a){
	$as = '';
	while ($as != $a) {
		$as = $a;
		$a = split($a);

		$ao = '';
		while ($ao != $a) {
			$ao = $a;
			$a = expl($a);
		}
	}

	return implode('', $a);
}

function magnitude($a){
	if (is_array($a[0])){
		$a[0] = magnitude(array_values($a[0]));
	}

	if (is_array($a[1])){
		$a[1] = magnitude(array_values($a[1]));
	}

	return 3 * (int)$a[0] + 2 * (int)$a[1];

}

$sum = '';
foreach($data as $key => $number){
	$sum_a = add(str_split($sum), str_split($number));
	$sum = reduce($sum_a);
}

echo 'Part 1: ' . magnitude(json_decode($sum));
