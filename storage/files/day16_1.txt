$input = '4057...CE84';

$binary = collect(str_split($input))
    ->map(fn ($hex) => str_pad(decbin(hexdec($hex)), 4, '0', STR_PAD_LEFT))
    ->join('');


function parse($binary, &$versionSum)
{
    $packet = ['data' => []];

    if (! str_replace('0', '', $binary)) {
        return [false, ''];
    }

    if (! empty($binary)) {
        [$version, $binary] = preg_split('/(?<=.{3})/', $binary, 2);
        $packet['version'] = bindec($version);
        $versionSum += $packet['version'];
    }

    if (! empty($binary)) {
        [$type, $binary] = preg_split('/(?<=.{3})/', $binary, 2);
        $packet['type'] = bindec($type);

        if ($packet['type'] == 4) {
            $literal = '';
            $more = true;
            while ($more) {
                [$byte, $binary] = preg_split('/(?<=.{5})/', $binary, 2);
                [$more, $number] = preg_split('/(?<=.{1})/', $byte, 2);
                $literal .= $number;
            }

            $packet['data'][] = ['number' => bindec($literal)];
        } else {
            [$lengthtype, $binary] = preg_split('/(?<=.{1})/', $binary, 2);
            $packet['lengthtype'] = bindec($lengthtype);

            [$subpacketcount, $binary] = preg_split('/(?<=.{'.($lengthtype ? 11 : 15).'})/', $binary, 2);
            $packet['subpacketcount'] = bindec($subpacketcount);

            if ($packet['lengthtype'] == 0) {
                [$subpackets, $binary] = preg_split('/(?<=.{'.$packet['subpacketcount'].'})/', $binary, 2);

                while (strlen($subpackets)) {
                    [$subpacket, $subpackets] = parse($subpackets, $versionSum);
                    if ($subpacket !== false) {
                        $packet['data'][] = ['subpacket' => $subpacket];
                    }
                }
            } else {
                for ($i = 0; $i < $packet['subpacketcount']; $i++) {
                    [$subpacket, $binary] = parse($binary, $versionSum);
                    if ($subpacket !== false) {
                        $packet['data'][] = ['subpacket' => $subpacket];
                    }
                }
            }
        }
    }

    return [$packet, $binary];
}

$versionSum = 0;

[$packet, $binary] = parse($binary, $versionSum);

echo 'Part 1: ' . $versionSum;
