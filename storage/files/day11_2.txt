<?php

$input = '4871252763
...
7788154252';

$flashes = 0;

function flash($octopuses, $y, $x) {
    $octopuses[$y][$x] = 0;
    for ($i = -1; $i <= 1; $i++) {
        for ($j = -1; $j <= 1; $j++) {
            if ($i == 0 && $j == 0) {
            } else {
                if (
                    $y + $i >= 0 &&
                    $y + $i < sizeof($octopuses) &&
                    $x + $j >= 0 &&
                    $x + $j < sizeof($octopuses[$y]) &&
                    $octopuses[$y + $i][$x + $j] != 0
                ) {
                    $octopuses[$y + $i][$x + $j]++;
                    if ($octopuses[$y + $i][$x + $j] > 9) {
                        $octopuses = flash($octopuses, $y + $i, $x + $j);
                    }
                }
            }
        }
    }
    return $octopuses;
}

$octopuses = collect(explode(PHP_EOL, $input))
    ->map(fn ($line) => collect(str_split($line))
          ->map(fn ($digit) => $digit))
    ->values()
    ->toArray();
$sum = 1;
$rounds = 0;

while ($sum !== 0) {
    $rounds++;
    for ($row = 0; $row < count ($octopuses); $row++) {
        for ($col = 0; $col < count($octopuses[$row]); $col++) {
            $octopuses[$row][$col]++;
        }
    }

    for ($row = 0; $row < count ($octopuses); $row++) {
        for ($col = 0; $col < count($octopuses[$row]); $col++) {
            if ($octopuses[$row][$col] > 9) {
                $octopuses = flash($octopuses, $row, $col, $flashes);
            }
        }
    }

    $sum = collect($octopuses)
        ->map(fn ($row) => collect($row)->reduce(fn ($carry, $item) => $carry + $item), 0)
        ->reduce(fn ($carry, $item) => $carry + $item, 0);
}

echo 'Part 2: ' . $rounds;
